CREATE TABLE PASSWORD (
  ID   BIGSERIAL   NOT NULL PRIMARY KEY,
  HASH VARCHAR(64) NOT NULL,
  SALT VARCHAR(64) NOT NULL
);

CREATE TABLE PRICE (
  ID    BIGSERIAL      NOT NULL PRIMARY KEY,
  VALUE DECIMAL(20, 4) NOT NULL
);

CREATE TABLE ROLE (
  ID   BIGSERIAL   NOT NULL PRIMARY KEY,
  NAME VARCHAR(32) NOT NULL
);

CREATE TABLE IMAGE (
  ID            BIGSERIAL    NOT NULL PRIMARY KEY,
  NAME          VARCHAR(128) NOT NULL,
  CONTENT_TYPE  VARCHAR(32)  NOT NULL,
  CONTENT       BYTEA        NOT NULL,
  LAST_MODIFIED TIMESTAMP(0) NOT NULL
);

CREATE TABLE "user" (
  ID          BIGSERIAL              NOT NULL PRIMARY KEY,
  NAME        VARCHAR(32)            NOT NULL,
  EMAIL       VARCHAR(64)            NOT NULL,
  ROLE_ID     INT DEFAULT 1          NOT NULL,
  PASSWORD_ID INT                    NOT NULL,
  BANNED      BOOLEAN DEFAULT FALSE  NOT NULL
);

CREATE TABLE STATUS (
  ID   BIGSERIAL   NOT NULL PRIMARY KEY,
  NAME VARCHAR(32) NOT NULL
);

CREATE TABLE PRODUCT (
  ID          BIGSERIAL     NOT NULL PRIMARY KEY,
  NAME        VARCHAR(128)  NOT NULL,
  CATEGORY_ID INT           NOT NULL,
  DESCRIPTION VARCHAR(1024) NOT NULL,
  PRICE_ID    INT           NOT NULL,
  IMAGE_ID    INT           NOT NULL
);

CREATE TABLE CATEGORY (
  ID   BIGSERIAL    NOT NULL PRIMARY KEY,
  NAME VARCHAR(128) NOT NULL
);

CREATE TABLE PURCHASE (
  ID         BIGSERIAL             NOT NULL PRIMARY KEY,
  USER_ID    INT                   NOT NULL,
  PRODUCT_ID INT                   NOT NULL,
  PRICE_ID   INT                   NOT NULL,
  DATE_ID    INT                   NOT NULL,
  STATUS_ID  INT DEFAULT 1         NOT NULL
);

CREATE TABLE DATE (
  ID   BIGSERIAL NOT NULL PRIMARY KEY,
  TIME BIGINT    NOT NULL
);

CREATE TABLE ATTRIBUTE (
  ID            BIGSERIAL    NOT NULL PRIMARY KEY,
  PRODUCT_ID    INT          NOT NULL,
  NAME          VARCHAR(128) NOT NULL,
  INTEGER_VALUE INT,
  DECIMAL_VALUE DECIMAL(20, 4),
  STRING_VALUE  VARCHAR(1024)
);

INSERT INTO ROLE (ROLE_ID, NAME, DELETED) VALUES
  (2, 'Admin', FALSE),
  (1, 'User', FALSE);

INSERT INTO STATUS (STATUS_ID, NAME, DELETED) VALUES
  (2, 'Paid', FALSE),
  (3, 'Canceled', FALSE),
  (1, 'Delivery', FALSE),
  (4, 'Unpaid', FALSE);

ALTER TABLE ATTRIBUTE ADD CONSTRAINT PK_ATTRIBUTE_ID PRIMARY KEY (ATTRIBUTE_ID);
ALTER TABLE ATTRIBUTE ADD CONSTRAINT FK_ATTRIBUTE_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);
ALTER TABLE CATEGORY ADD CONSTRAINT PK_CATEGORY_ID PRIMARY KEY (CATEGORY_ID);
ALTER TABLE DATE ADD CONSTRAINT PK_DATE_ID PRIMARY KEY (DATE_ID);
ALTER TABLE IMAGE ADD CONSTRAINT PK_IMAGE_ID PRIMARY KEY (IMAGE_ID);
ALTER TABLE PASSWORD ADD CONSTRAINT PK_PASSWORD_ID PRIMARY KEY (PASSWORD_ID);
ALTER TABLE PRICE ADD CONSTRAINT PK_PRICE_ID PRIMARY KEY (PRICE_ID);
ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT_ID PRIMARY KEY (PRODUCT_ID);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_CATEGORY_ID FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATEGORY_ID);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_PRICE_ID FOREIGN KEY (PRICE_ID) REFERENCES PRICE (PRICE_ID);
ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_IMAGE_ID FOREIGN KEY (IMAGE_ID) REFERENCES IMAGE (IMAGE_ID);
ALTER TABLE PURCHASE ADD CONSTRAINT PK_PURCHASE_ID PRIMARY KEY (PURCHASE_ID);
ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_USER_ID FOREIGN KEY (USER_ID) REFERENCES "user" (USER_ID);
ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_PRODUCT_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID);
ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_PRICE_ID FOREIGN KEY (PRICE_ID) REFERENCES PRICE (PRICE_ID);
ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_DATE_ID FOREIGN KEY (date) REFERENCES DATE (DATE_ID);
ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_STATUS_ID FOREIGN KEY (STATUS_ID) REFERENCES STATUS (STATUS_ID);
ALTER TABLE ROLE ADD CONSTRAINT PK_ROLE_ID PRIMARY KEY (ROLE_ID);
ALTER TABLE STATUS ADD CONSTRAINT PK_STATUS_ID PRIMARY KEY (STATUS_ID);
ALTER TABLE "user" ADD CONSTRAINT PK_USER_ID PRIMARY KEY (USER_ID);
ALTER TABLE "user" ADD CONSTRAINT FK_USER_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ROLE_ID);
ALTER TABLE "user" ADD CONSTRAINT FK_USER_PASSWORD_ID FOREIGN KEY (PASSWORD_ID) REFERENCES PASSWORD (PASSWORD_ID);